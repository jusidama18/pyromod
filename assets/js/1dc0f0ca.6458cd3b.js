"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[509],{3723:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>a,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var t=n(5893),d=n(1151);const r={title:"User"},i=void 0,o={id:"reference/modules/listen/user",title:"User",description:"class pyromod.listen.User",source:"@site/docs/reference/modules/listen/user.md",sourceDirName:"reference/modules/listen",slug:"/reference/modules/listen/user",permalink:"/reference/modules/listen/user",draft:!1,unlisted:!1,editUrl:"https://github.com/usernein/pyromod/tree/master/docs/docs/reference/modules/listen/user.md",tags:[],version:"current",frontMatter:{title:"User"},sidebar:"apiReferenceSidebar",previous:{title:"Message",permalink:"/reference/modules/listen/message"},next:{title:"Pagination",permalink:"/reference/modules/nav/pagination"}},c={},l=[{value:"<em>class</em> <code>pyromod.listen.User</code>",id:"class-pyromodlistenuser",level:2},{value:"<em>bound method</em> <code>listen</code>",id:"bound-method-listen",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"<em>bound method</em> <code>ask</code>",id:"bound-method-ask",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<em>bound method</em> <code>stop_listening</code>",id:"bound-method-stop_listening",level:3},{value:"Returns",id:"returns-2",level:4}];function h(e){const s={blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.h2,{id:"class-pyromodlistenuser",children:[(0,t.jsx)(s.em,{children:"class"})," ",(0,t.jsx)(s.code,{children:"pyromod.listen.User"})]}),"\n",(0,t.jsxs)(s.p,{children:["Bases: ",(0,t.jsx)(s.code,{children:"pyrogram.types.user_and_chats.user.User"})]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"pyromod.listen.User"})," class is an extension of the ",(0,t.jsx)(s.code,{children:"pyrogram.types.user_and_chats.user.User"})," class. It provides additional\nmethods for working with User objects with pyromod."]}),"\n",(0,t.jsxs)(s.h3,{id:"bound-method-listen",children:[(0,t.jsx)(s.em,{children:"bound method"})," ",(0,t.jsx)(s.code,{children:"listen"})]}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"bound method"})," ",(0,t.jsx)(s.code,{children:"listen(*args, **kwargs):"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Listen for a message or a callback query from the user. This method is a bound method that calls the ",(0,t.jsx)(s.code,{children:"listen"})," method of\nthe ",(0,t.jsx)(s.code,{children:"Client"}),"\nclass, passing its own ",(0,t.jsx)(s.code,{children:"User.id"})," as the ",(0,t.jsx)(s.code,{children:"user_id"})," parameter."]}),"\n",(0,t.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Parameter"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"*args"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Any"})}),(0,t.jsxs)(s.td,{children:["The arguments to pass to the ",(0,t.jsx)(s.code,{children:"Client.listen"})," method."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"**kwargs"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Any"})}),(0,t.jsxs)(s.td,{children:["The keyword arguments to pass to the ",(0,t.jsx)(s.code,{children:"Client.listen"})," method."]})]})]})]}),"\n",(0,t.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(s.p,{children:"The message or callback query that was listened for."}),"\n",(0,t.jsxs)(s.h3,{id:"bound-method-ask",children:[(0,t.jsx)(s.em,{children:"bound method"})," ",(0,t.jsx)(s.code,{children:"ask"})]}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"bound method"})," ",(0,t.jsx)(s.code,{children:"ask(text: str, *args, **kwargs):"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Sends a message with the specified text to the ",(0,t.jsx)(s.code,{children:"User.id"})," as chat_id (i.e. user's private conversation) and wait for a\nresponse from the user on the same chat. This method is a bound\nmethod that calls\nthe ",(0,t.jsx)(s.code,{children:"ask"})," method of the ",(0,t.jsx)(s.code,{children:"Client"})," class, passing its own ",(0,t.jsx)(s.code,{children:"User.id"})," as both ",(0,t.jsx)(s.code,{children:"chat_id"})," and ",(0,t.jsx)(s.code,{children:"user_id"})," parameters."]}),"\n",(0,t.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Parameter"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"text"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"str"})}),(0,t.jsx)(s.td,{children:"The text of the message to send."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"*args"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Any"})}),(0,t.jsxs)(s.td,{children:["The arguments to pass to the ",(0,t.jsx)(s.code,{children:"Client.ask"})," method."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"**kwargs"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Any"})}),(0,t.jsxs)(s.td,{children:["The keyword arguments to pass to the ",(0,t.jsx)(s.code,{children:"Client.ask"})," method."]})]})]})]}),"\n",(0,t.jsx)(s.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsxs)(s.p,{children:["The message that was listened for. In the attribute ",(0,t.jsx)(s.code,{children:"sent_message"}),", you can find the Message object of the message that was"]}),"\n",(0,t.jsxs)(s.h3,{id:"bound-method-stop_listening",children:[(0,t.jsx)(s.em,{children:"bound method"})," ",(0,t.jsx)(s.code,{children:"stop_listening"})]}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"bound method"})," ",(0,t.jsx)(s.code,{children:"stop_listening()"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Stop listening for messages and/or callback queries. This method is a bound method that calls the ",(0,t.jsx)(s.code,{children:"stop_listening"}),"\nmethod\nof the ",(0,t.jsx)(s.code,{children:"Client"})," class, passing its own ",(0,t.jsx)(s.code,{children:"User.id"})," as the ",(0,t.jsx)(s.code,{children:"user_id"})," parameter."]}),"\n",(0,t.jsx)(s.h4,{id:"returns-2",children:"Returns"}),"\n",(0,t.jsx)(s.p,{children:"None"})]})}function a(e={}){const{wrapper:s}={...(0,d.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>o,a:()=>i});var t=n(7294);const d={},r=t.createContext(d);function i(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);